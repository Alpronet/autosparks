<?phpclass Traffic {    private $db;    private $ip;    private $uri;    private $userAgent;    function __construct() {        $this->db = $this->persistencia = new Persistence();        $this->ip = $_SERVER['REMOTE_ADDR'];        $cookie = md5($this->getUri());        $this->userAgent = $_SERVER['HTTP_USER_AGENT'];        $this->setCook();        $this->_rec_data();    }    public function loadTraffic() {    }    private function setCook() {        setcookie(md5($this->getUri()), TRUE, time() + strtotime(date('Y-m-d 23:59:59')) - time());    }    private function _rec_data() {        $valores = array();//            $json = file_get_contents( 'http://api.ipstack.com/'.$this->ip.'?access_key=9dd56ce56acda63c464009a63ecdadc9');            $obj = json_decode($json, true);//            print_r($obj);die();            array_push($valores, $this->getUri());            array_push($valores, $this->ip);            array_push($valores, $obj['city']);            array_push($valores, $obj['region_name']);            array_push($valores, $obj['country_name']);            array_push($valores, $this->getBrowser());            array_push($valores, $this->getRefer());            array_push($valores, $this->getPlatform());            array_push($valores, date('d/m/Y H:i', time()));            $this->db->insertNew('trafego', $valores);          }    private function getUri() {        $this->uri = $_SERVER['REQUEST_URI'];        if ($this->uri == '/') {            $url = 'Pagina Inicial';            return $url;        } else {            $url = explode('/', $this->uri);            $url = $url[1];           return $url;        }    }    private function getBrowser() {        include_once 'browsers.php';        foreach ($browsers as $key => $value) {            if (preg_match('|' . $key . '.*([0-9\.]+)|i', $this->userAgent)) {                return $value;            }        }    }    private function getPlatform() {        include_once 'platforms.php';        foreach ($platforms as $key => $value) {            if (preg_match('|' . preg_quote($key) . '|i', $this->userAgent)) {                return $value;            }        }    }    private function getRefer() {                $referencia = $_SERVER['HTTP_REFERER'];                        $referer_host = parse_url($referencia, PHP_URL_HOST);        $referencia = explode('http://', $referer_host);        $referencia = $referencia[0];        $host = $_SERVER['SERVER_NAME'];        if (!$referencia) {            $retorno = 'Acesso Direto';        } elseif ($referer_host == $host) {            $retorno = 'Navegacao Interna';        } else {            $retorno = $referencia;        }        return $retorno;    }}// Pegar o mac por php//    function getRealIPAddress() {////        if (!empty($_SERVER['HTTP_CLIENT_IP'])) {////check ip from share internet//            $ip = $_SERVER['HTTP_CLIENT_IP'];//        } else if (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {////to check ip is pass from proxy//            $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];//        } else {//            $ip = $_SERVER['REMOTE_ADDR'];//        }//        return $ip;//    }//////retorna nome da máquina remota pelo IP//    function NomeMaquinaRem() {////        $Nome = gethostbyaddr(getRealIPAddress());//        return $Nome;//    }//////Mac da Máquina remota conectada//    function MacAdressByWindows() {////        $ipAddress = $this->getRealIPAddress();////#run the external command, break output into lines//        exec("arp -a $ipAddress", $output);//        $IpMac = explode(" ", trim($output[3]));//        echo  $IpMac[11];//    }