<?phpclass BlogModel {    function __construct() {        $this->persistencia = new Persistence();    }    public function selectMiniaturas() {        $condition = 'status_blog = "Ativa"';        $extra = 'ORDER BY data_blog DESC ';        $table = 'Blog';        $noticia = $this->persistencia->select($table, $condition, $extra);              $minituras = '';        for ($i = 0; $i < count($noticia); $i++) {            $minituras .= '<div class="related-post">				<div class="related-post-left">			        	<a href="single?id='.$noticia[$i]['id_blog'].'">                                           <img src="sistema/images/'.$noticia[$i]['imagem_blog'].'" alt="'.$noticia[$i]['titulo_blog'].' " />                                        </a>				</div>                                <div class="related-post-right">                                     <h4><a href="single?id='.$noticia[$i]['id_blog'].'">'.utf8_encode($noticia[$i]['titulo_blog']).'</h4>                                     <p>'. $this->diminui(utf8_encode($noticia[$i]['texto_blog']) , 80).'</p></a>                                 </div>				<div class="clearfix"> </div>			    </div>';        }        $minituras .= '';        return $minituras;    }           public function selectTitulo() {                $condition = 'id_blog = "'.$_GET['id'].'"';        $extra = 'ORDER BY data_blog DESC ';        $table = 'Blog';        $noticia = $this->persistencia->select($table, $condition, $extra);                return utf8_encode($noticia[0]['titulo_noticia']) ;    }    public function selectNoticias() {                $condition = 'status_blog = "Ativa"';        $extra = 'ORDER BY data_blog DESC ';        $table = 'Blog';        $noticia = $this->persistencia->select($table, $condition, $extra);             for ($i = 0; $i < count($noticia); $i++) {            $rest = substr(utf8_encode($noticia[$i]['titulo_blog']), 0, 5);            $datahora = strtotime($noticia[$i]['data_blog']);            $mes = date("m", $datahora);            $dia = date("d", $datahora);            $ano = date("Y", $datahora);                                                $minituras .= '<div class="blog-left-grid">					<h4><a href="single?id='.utf8_encode($noticia[$i]['id_blog']).'">'.utf8_encode($noticia[$i]['titulo_blog']).'</a></h4>					<ul>						<li><span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>'.$dia.'/'.$mes.'/'.$ano.'</li>					</ul>					<a href="single?id='.utf8_encode($noticia[$i]['id_blog']).'"><img src="sistema/images/'.$noticia[$i]['imagem_blog'].'" alt="'.$noticia[$i]['titulo_blog'].' " class="img-responsive" /></a>					<p>'.utf8_encode($this->diminui($noticia[$i]['texto_blog'], 200)).'</p>					<div class="more">						<a href="single?id='.utf8_encode($noticia[$i]['id_blog']).'" class="hvr-curl-bottom-right">Leia Mais</a>					</div>				</div>';        }                        return $minituras;    }        public function selectNoticia() {                    $condition = 'id_blog = "'.$_GET['id'].'"';        $extra = 'ORDER BY data_blog DESC ';        $table = 'Blog';        $noticia = $this->persistencia->select($table, $condition, $extra);                $textoLimpo = utf8_encode($noticia[0] ['titulo_noticia']) ;        $rest = $this->limpaString($textoLimpo);                        for ($i = 0; $i < count($noticia); $i++) {            $datahora = strtotime($noticia[$i]['data_blog']);            $mes = date("m", $datahora);            $dia = date("d", $datahora);            $ano = date("Y", $datahora);                        $minituras .= '<div class="blog-left-grid">					<h4>'.utf8_encode($noticia[$i]['titulo_blog']).'</h4>					<ul>						<li><span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>'.$dia.'/'.$mes.'/'.$ano.'</li>											</ul>					<img src="sistema/images/'.$noticia[$i]['imagem_blog'].'" alt="'.$noticia[$i]['titulo_blog'].' " class="img-responsive" />					<p>'.utf8_encode($noticia[$i]['texto_blog']).'</p>					<div style="height: 2em"></div>				</div>';        }                //        $minituras .= '<script> window.history.pushState("'. $rest.'", "Title", "/'. $rest.'");</script>';        return $minituras;    }    public function selectCategorias() {                $condition = 'status_categoria = "ATIVA"';        $table = 'Categorias';        $categoria = $this->persistencia->select($table, $condition);                for ($i = 0; $i < count($categoria); $i++) {            $texto .='<li><a href="#">'.$categoria[$i]['nome_categoria'].'</a></li>';        }                return utf8_encode($texto) ;    }        public function diminui($texto,$qnt) {                 $resumo=substr($texto,'0',$qnt);		$last=strrpos($resumo," ");		$resumo=substr($resumo,0,$last);		return $resumo."...";    }        public function imagemMenor($imagem) {        $url = explode('.', $imagem);        $parte =$url[0].'_dv.'.$url[1];                return $parte;    }    public function convertMes($param) {        switch ($param) {            case "01": $mes = '<br>Jan';                break;            case "02": $mes = '<br>Fev';                break;            case "03": $mes = '<br>Mar';                break;            case "04": $mes = '<br>Abr';                break;            case "05": $mes = '<br>Mai';                break;            case "06": $mes = '<br>Jun';                break;            case "07": $mes = '<br>Jul';                break;            case "08": $mes = '<br>Ago';                break;            case "09": $mes = '<br>Set';                break;            case "10": $mes = '<br>Out';                break;            case "11": $mes = '<br>Nov';                break;            case "12": $mes = '<br>Dez';                break;        }        return $mes;    }    function limpaString($str) {         $str =str_replace('á', 'a', $str);    $str =str_replace('à', 'a', $str);     $str =str_replace('ã', 'a', $str);     $str =str_replace('ä', 'a', $str);         $str =str_replace('é', 'e', $str);    $str =str_replace('è', 'e', $str);     $str =str_replace('ê', 'e', $str);     $str =str_replace('ë', 'e', $str);         $str =str_replace('í', 'i', $str);    $str =str_replace('ì', 'i', $str);     $str =str_replace('î', 'i', $str);     $str =str_replace('ï', 'i', $str);        $str =str_replace('ó', 'o', $str);    $str =str_replace('ò', 'o', $str);     $str =str_replace('õ', 'o', $str);     $str =str_replace('ô', 'o', $str);    $str =str_replace('ö', 'o', $str);                $str =str_replace('ú', 'u', $str);    $str =str_replace('ù', 'u', $str);     $str =str_replace('û', 'u', $str);     $str =str_replace('ü', 'u', $str);      $str = str_replace('ç', 'c', $str);    $str = str_replace(' ', '_', $str);    return $str;}}